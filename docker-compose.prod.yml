version:
    "3.9"

    #######################################
    # Basic needed services
    #######################################

services:
    nestify:
        container_name: nestify
        env_file: "env/.env.${ENV}"
        build:
            context: "."
            dockerfile: ./docker/prod.Dockerfile
        image: nestify
        depends_on:
            - traefik
            - redis
            - rabbitmq
        restart: unless-stopped
        command: npm run start
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nestify.rule=Host(`api.localhost`)"
            - "traefik.http.services.nestify.loadbalancer.server.port=8000"
            - "traefik.http.middlewares.test-ratelimit.ratelimit.average=100"
            - "traefik.http.middlewares.test-ratelimit.ratelimit.burst=50"
            - "traefik.http.middlewares.test-ratelimit.ratelimit.period=1m"
            - "traefik.http.middlewares.traefik-headers.headers.framedeny=true"
            - "traefik.http.middlewares.traefik-headers.headers.browserxssfilter=true"
            - "traefik.http.middlewares.traefik-headers.headers.contentTypeNosniff=true"
            - "traefik.http.middlewares.traefik-headers.headers.permissionsPolicy=camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
        stdin_open: true
        tty: true
        networks:
            - nestify-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules

    traefik:
        image: traefik:v2.9.6
        container_name: traefik
        command:
            # Enable Docker in Traefik, so that it reads labels from Docker services
            - --providers.docker=true
            # Do not expose all Docker services, only the ones explicitly exposed
            - --providers.docker.exposedbydefault=false
            # Disable Docker Swarm mode for local development
            # - --providers.docker.swarmmode
            # Enable the access log, with HTTP requests
            - --accesslog
            # Enable the Traefik log, for configurations and errors
            - --log
            # Enable the Dashboard and API
            - --api
            # Enable the Dashboard and API in insecure mode for local development
            - --api.insecure=true
        labels:
            - "traefik.enable=true"
        networks:
            - nestify-network
        ports:
            - "443:443"
            - "80:80"
            - "8080:8080"
        volumes:
            - "./letsencrypt:/letsencrypt"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"

    redis:
        image: redis:7.0.8-alpine
        restart: always
        ports:
            - "6379"
        networks:
            - nestify-network
        command: redis-server --loglevel warning --requirepass ${PASSWORD}
        volumes:
            - redis-data:/data

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3.11.8-management-alpine
        networks:
            - nestify-network
        environment:
            - RABBITMQ_DEFAULT_USER=nestify
            - RABBITMQ_DEFAULT_PASS=${PASSWORD}
        ports:
            # AMQP protocol port
            - "5672:5672"
            # HTTP management UI
            - "15672:15672"
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq/mnesia/

    db:
        image: postgres:15.1-alpine
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=somesecretpassword
            - POSTGRES_DB=postgres
        networks:
            - nestify-network

    pgadmin:
        container_name: pgadmin4_container
        image: dpage/pgadmin4:6.20
        restart: unless-stopped
        environment:
            - PGADMIN_DEFAULT_EMAIL: admin@admin.com
            - PGADMIN_DEFAULT_PASSWORD: secret
            - PGADMIN_LISTEN_PORT: 80
        ports:
            - "8090:80"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        networks:
            - nestify-network

volumes:
    redis-data:
    rabbitmq-data:
    postgres_data:
    pgadmin-data:

networks:
    nestify-network:
        name: nestify-network
